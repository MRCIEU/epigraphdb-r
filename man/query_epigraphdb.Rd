% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request_and_response.R
\name{query_epigraphdb}
\alias{query_epigraphdb}
\title{Send data request to an EpiGraphDB API endpoint}
\usage{
query_epigraphdb(endpoint, params, mode = c("raw", "table"),
  method = c("GET"))
}
\arguments{
\item{endpoint}{An EpiGraphDB API endpoint, e.g. \code{"/mr"} or \code{"/confounder"}.
Consult the \href{http://api.epigraphdb.org}{EpiGraphDB API documentation}.}

\item{params}{A list of parameters associated with the query endpoint.}

\item{mode}{\code{c("raw", "table")}, if \code{"table"} then the query handler will try
to convert the returned data to a tibble dataframe.
NOTE: The default mode is "raw" which will NOT convert the returned response to
a dataframe.
This is different to functions that query topic endpoints which
default to return a dataframe.
Explicitly specify \code{mode = "table"} when needed.}

\item{method}{Type of HTTP (GET, POST, PUT, etc.) method.
Currently only \code{"GET"} is supported.}
}
\value{
Data from an EpiGraphDB API endpoint.
}
\description{
This is a general purpose function to send data request
which can be used when there has not been a R equivalent package function
to an API endpoint.
Underneath this is a wrapper around \code{httr} functions with better handling of
returned status.
}
\examples{
# equivalent to `mr(exposure = "Body mass index", outcome = "Coronary heart disease")`
query_epigraphdb(
  endpoint = "/mr",
  params = list(
    exposure = "Body mass index",
    outcome = "Coronary heart disease"
  ),
  mode = "table"
)

# /meta/nodes/Gwas/list
query_epigraphdb(
  endpoint = "/meta/nodes/Gwas/list",
  params = list(
    limit = 5,
    offset = 0
  )
) \%>\% str(1)

# error handling
tryCatch(
  query_epigraphdb(
    endpoint = "/mr",
    params = list(
      exposure = NULL,
      outcome = NULL
    )
  ),
  error = function(e) {
    message(e)
  }
)
}
